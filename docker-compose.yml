version: '3'
services:
  nginx:
  - dockerfile_path: dockerfiles
    git:
      branch: master
      repo_clone_url: git@github.com:gaganVirk/gagan-blog.git
    github:
      repo: digitalocean/gagan-blog
      branch: master
      deploy_on_push: true
    name: gagan-blog
    image:
      registry_type: 
      registry:
      repository: gagan-blog
      tag: latest
    environment_slug:
    envs:
      -key:
       value: GENERAL
       scope: RUN_AND_BUILD_TIME
       type: GENERAL
    instance_size_slug: basic-xxs
    instance_count: 1
    http_port: default
    routes:
      path: ./
    health_check:
      initial_delay_seconds:
      period_seconds:
      timeout_seconds:
      success_threshold:
      failure_threshold:
      http_path:
    cros:
      allow_origins:
        exact: 
        prefix: 
        regex:
    internal_ports:

  nginx:
    build: ./dockerfiles/nginx/
    volumes:
      - ./dockerfiles/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./src:/var/www/html
    networks:
      - default
      - web
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.routers.audit.rule=Host(${DOMAIN_NAME})"
      - "traefik.http.routers.audit.entrypoints=web"
      - "traefik.http.routers.audit-secured.rule=Host(${DOMAIN_NAME})"
      - "traefik.http.routers.audit-secured.entrypoints=web-secured"
      - "traefik.http.routers.audit-secured.tls=true"
      - "traefik.http.routers.audit-secured.tls.certresolver=gagantlschallenge"
  php-fpm:
    build: ./dockerfiles/php-fpm/
    restart: unless-stopped
    volumes:
      - ./src:/var/www/html
      - ~/.composer:/.composer
    user: 1000:1000

  mariadb:
    image: linuxserver/mariadb:latest
    restart: unless-stopped
    volumes: 
      - mariadb:/config
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}

  redis:
    build: ./dockerfiles/redis/
    volumes:
      - redis:/data
    command: "redis-server /usr/local/etc/redis/redis.conf"

networks:
  web:
    external: true

volumes:
  mariadb:
  redis:
